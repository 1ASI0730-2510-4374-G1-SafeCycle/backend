Index: Bikes/Domain/Model/Aggregates/Bikes.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.ComponentModel.DataAnnotations;\r\nusing backend.Bikes.Domain.Model.Commands;\r\n\r\n\r\nnamespace backend.Bikes.Domain.Model.Aggregates;\r\n\r\npublic partial class Bikes\r\n{\r\n    protected Bikes()\r\n    {\r\n        condition = string.Empty;\r\n        available = string.Empty;\r\n    }\r\n\r\n    public Bikes(CreateBikeCommand command)\r\n    {\r\n        condition = command.condition;\r\n        available = command.available;\r\n    }\r\n    \r\n    public int Id { get; set; }\r\n    \r\n    [Required]\r\n    [StringLength(20, MinimumLength = 1)]\r\n    public string condition {get; set;}\r\n    \r\n    [Required]\r\n    [StringLength(5, MinimumLength = 1)]\r\n    public string available {get; set;}\r\n    \r\n    [Required]\r\n    public BikeStations bikeStation { get; set; }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Bikes/Domain/Model/Aggregates/Bikes.cs b/Bikes/Domain/Model/Aggregates/Bikes.cs
--- a/Bikes/Domain/Model/Aggregates/Bikes.cs	(revision c6b1a557802242d15794d78442ccbf21575af090)
+++ b/Bikes/Domain/Model/Aggregates/Bikes.cs	(date 1750382722785)
@@ -10,12 +10,14 @@
     {
         condition = string.Empty;
         available = string.Empty;
+        BikeStationId = 0;
     }
 
     public Bikes(CreateBikeCommand command)
     {
         condition = command.condition;
         available = command.available;
+        BikeStationId = command.bikeStationId;
     }
     
     public int Id { get; set; }
@@ -30,4 +32,7 @@
     
     [Required]
     public BikeStations bikeStation { get; set; }
+    
+    [Required]
+    public int BikeStationId { get; set; } 
 }
\ No newline at end of file
Index: Shared/Infrastructure/Persistence/EFC/Repositories/UnitOfWork.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Shared/Infrastructure/Persistence/EFC/Repositories/UnitOfWork.cs b/Shared/Infrastructure/Persistence/EFC/Repositories/UnitOfWork.cs
new file mode 100644
--- /dev/null	(date 1750382722794)
+++ b/Shared/Infrastructure/Persistence/EFC/Repositories/UnitOfWork.cs	(date 1750382722794)
@@ -0,0 +1,23 @@
+using backend.Shared.Domain.Repositories;
+using backend.Shared.Infrastructure.Persistence.EFC.Configuration;
+
+namespace backend.Shared.Infrastructure.Persistence.EFC.Repositories;
+
+/// <summary>
+///     Unit of work for the application.
+/// </summary>
+/// <remarks>
+///     This class is used to save changes to the database context.
+///     It implements the IUnitOfWork interface.
+/// </remarks>
+/// <param name="context">
+///     The database context for the application
+/// </param>
+public class UnitOfWork(SafecycleDBContext context) : IUnitOfWork
+{
+    // inheritedDoc
+    public async Task CompleteAsync()
+    {
+        await context.SaveChangesAsync();
+    }
+}
\ No newline at end of file
Index: Shared/Domain/Repositories/IUnitOfWork.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Shared/Domain/Repositories/IUnitOfWork.cs b/Shared/Domain/Repositories/IUnitOfWork.cs
new file mode 100644
--- /dev/null	(date 1750382722792)
+++ b/Shared/Domain/Repositories/IUnitOfWork.cs	(date 1750382722792)
@@ -0,0 +1,13 @@
+namespace backend.Shared.Domain.Repositories;
+
+/// <summary>
+///     Unit of work interface for all repositories
+/// </summary>
+public interface IUnitOfWork
+{
+    /// <summary>
+    ///     Save changes to the repository
+    /// </summary>
+    /// <returns></returns>
+    Task CompleteAsync();
+}
\ No newline at end of file
